@article{shehory_methods_1998,
	title = {Methods for task allocation via agent coalition formation},
	volume = {101},
	issn = {0004-3702},
	url = {http://www.sciencedirect.com/science/article/B6TYF-3TT0072-6/2/97075c4040c468e4a8ea626c67786912},
	doi = {10.1016/S0004-3702(98)00045-9},
	abstract = {Task execution in multi-agent environments may require cooperation among agents. Given a set of agents and a set of tasks which they have to satisfy, we consider situations where each task should be attached to a group of agents that will perform the task. Task allocation to groups of agents is necessary when tasks cannot be performed by a single agent. However it may also be beneficial when groups perform more efficiently with respect to the single agents' performance. In this paper we present several solutions to the problem of task allocation among autonomous agents, and suggest that the agents form coalitions in order to perform tasks or improve the efficiency of their performance. We present efficient distributed algorithms with low ratio bounds and with low computational complexities. These properties are proven theoretically and supported by simulations and an implementation in an agent system. Our methods are based on both the algorithmic aspects of combinatorics and approximation algorithms for {NP-hard} problems. We first present an approach to agent coalition formation where each agent must be a member of only one coalition. Next, we present the domain of overlapping coalitions. We proceed with a discussion of the domain where tasks may have a precedence order. Finally, we discuss the case of implementation in an open, dynamic agent system. For each case we provide an algorithm that will lead agents to the formation of coalitions, where each coalition is assigned a task. Our algorithms are any-time algorithms, they are simple, efficient and easy to implement.},
	number = {1-2},
	journal = {Artificial Intelligence},
	author = {Onn Shehory and Sarit Kraus},
	month = may,
	year = {1998},
	keywords = {Coalition formation, Multi-agent cooperation, task allocation},
	pages = {165--200}
}
